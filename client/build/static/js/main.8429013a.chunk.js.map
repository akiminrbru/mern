{"version":3,"sources":["hooks/http.hook.js","context/AuthContext.js","components/Loader.js","components/LinksList.js","pages/LinksPage.js","pages/CreatePage.js","components/LinkCard.js","pages/DetailPage.js","pages/AuthPage.js","hooks/message.hook.js","hooks/auth.hook.js","components/Navbar.js","App.js","routes.js","index.js"],"names":["useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","console","log","clearError","noop","AuthContext","createContext","token","userId","login","logout","isAuthenticated","Loader","style","display","justifyContent","paddingTop","className","LinksList","links","length","map","link","index","from","to","_id","LinksPage","setLinks","useContext","fetchLinks","Authorization","fetched","useEffect","CreatePage","history","useHistory","auth","setLink","window","M","updateTextFields","pressHandler","event","key","push","placeholder","id","type","value","onChange","e","target","onKeyPress","htmlFor","LinkCard","href","rel","clicks","Date","date","toLocaleDateString","DetailPage","linkId","useParams","getLink","AuthPage","text","toast","html","email","password","form","setForm","changeHandler","name","registerHandler","loginHandler","marginRight","disabled","onClick","storageName","Navbar","padding","preventDefault","App","setToken","ready","setReady","setUserId","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","path","exact","useRoutes","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8429013a.chunk.js","sourcesContent":["import {useState, useCallback} from 'react';\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n        setLoading(true);\r\n        try {\r\n            if (body) {\r\n                body = JSON.stringify(body);\r\n                headers['Content-Type'] = 'application/json';\r\n            }\r\n\r\n            const response = await fetch(url, {method, body, headers});\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.message || 'Что-то пошло не так');\r\n            }\r\n\r\n            setLoading(false);\r\n\r\n            return data;\r\n        } catch (e) {\r\n            console.log(\"Catch\", e.message)\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n    }, [])\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {loading, request, error, clearError};\r\n}","import {createContext} from \"react\";\r\n\r\nfunction noop() {}\r\n\r\nexport const AuthContext = createContext({\r\n    token: null,\r\n    userId: null,\r\n    login: noop,\r\n    logout: noop,\r\n    isAuthenticated: false\r\n});","import React from \"react\";\r\n\r\nexport const Loader = () => {\r\n    return (\r\n        <div style={{display: \"flex\", justifyContent: 'center', paddingTop: '2rem'}}>\r\n            <div className=\"preloader-wrapper active\">\r\n                <div className=\"spinner-layer spinner-red-only\">\r\n                    <div className=\"circle-clipper left\">\r\n                        <div className=\"circle\"/>\r\n                    </div>\r\n                    <div className=\"gap-patch\">\r\n                        <div className=\"circle\"/>\r\n                    </div>\r\n                    <div className=\"circle-clipper right\">\r\n                        <div className=\"circle\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport const LinksList = ({ links }) => {\r\n    if (!links.length) {\r\n        return <p className=\"center\">Ссылок пока нет</p>\r\n    }\r\n\r\n    return (\r\n        <table>\r\n            <thead>\r\n            <tr>\r\n                <th>№</th>\r\n                <th>Орининальная</th>\r\n                <th>Сокращенная</th>\r\n                <th>Открыть</th>\r\n            </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n            {links.map((link, index) => {\r\n                return (\r\n                    <tr key={link._id}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{link.from}</td>\r\n                        <td>{link.to}</td>\r\n                        <td>\r\n                            <Link to={`/detail/${link._id}`}>Открыть</Link>\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}","import React, {useCallback, useContext, useEffect, useState} from \"react\";\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport {Loader} from \"../components/Loader\";\r\nimport {LinksList} from \"../components/LinksList\";\r\n\r\nexport const LinksPage = () => {\r\n    const [links, setLinks] = useState([]);\r\n    const {loading, request} = useHttp();\r\n    const {token} = useContext(AuthContext);\r\n\r\n    const fetchLinks = useCallback(async () => {\r\n        try {\r\n            const fetched = await request('/api/link', 'GET', null, {\r\n                Authorization: `Bearer ${token}`\r\n            });\r\n            setLinks(fetched)\r\n        } catch (e) {\r\n        }\r\n    }, [token, request]);\r\n\r\n    useEffect(() => {\r\n        fetchLinks();\r\n    }, [fetchLinks])\r\n\r\n    if (loading) {\r\n        return <Loader/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!loading && <LinksList links={links}/>}\r\n        </>\r\n    )\r\n}","import React, {useState, useEffect, useContext} from \"react\";\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport const CreatePage = () => {\r\n    const history = useHistory();\r\n    const auth = useContext(AuthContext);\r\n    const {request} = useHttp();\r\n    const [link, setLink] = useState('');\r\n\r\n    useEffect(() => {\r\n        window.M.updateTextFields();\r\n    }, [])\r\n\r\n    const pressHandler = async (event) => {\r\n        if (event.key === \"Enter\") {\r\n            try {\r\n                const data = await request('/api/link/generate', \"POST\", {from: link}, {\r\n                    Authorization: `Bearer ${auth.token}`\r\n                });\r\n                history.push(`/detail/${data.link._id}`);\r\n            } catch (e) {\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col s8 offset-s2\" style={{paddingTop: \"2rem\"}}>\r\n                <input\r\n                    placeholder=\"Вставьте ссылку\"\r\n                    id=\"link\"\r\n                    type=\"text\"\r\n                    value={link}\r\n                    onChange={e => setLink(e.target.value)}\r\n                    onKeyPress={pressHandler}\r\n                />\r\n                <label htmlFor=\"link\">Введите ссылку</label>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport const LinkCard = ({ link }) => {\r\n    return (\r\n        <>\r\n            <h2>Ссылка</h2>\r\n\r\n            <p>Ваша ссылка: <a href={link.to} target=\"_blank\" rel=\"noopener noreferrer\">{link.to}</a></p>\r\n            <p>Откуда: <a href={link.from} target=\"_blank\" rel=\"noopener noreferrer\">{link.from}</a></p>\r\n            <p>Количество кликов по ссылке: <strong>{link.clicks}</strong></p>\r\n            <p>Дата создания: <strong>{new Date(link.date).toLocaleDateString()}</strong></p>\r\n        </>\r\n    )\r\n}","import React, {useCallback, useContext, useEffect, useState} from \"react\";\r\nimport {useParams} from 'react-router-dom';\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport {Loader} from \"../components/Loader\";\r\nimport {LinkCard} from \"../components/LinkCard\";\r\n\r\n\r\nexport const DetailPage = () => {\r\n    const {token} = useContext(AuthContext);\r\n    const {request, loading} = useHttp();\r\n    const [link, setLink] = useState(null);\r\n    const linkId = useParams().id;\r\n\r\n    const getLink = useCallback(async () => {\r\n        try {\r\n            const fetched = await request(`/api/link/${linkId}`, \"GET\", null, {\r\n                Authorization: `Bearer ${token}`\r\n            });\r\n            setLink(fetched);\r\n        } catch (e) {\r\n        }\r\n    }, [token, linkId, request]);\r\n\r\n    useEffect(() => {\r\n        getLink()\r\n    }, [getLink]);\r\n\r\n    if (loading) {\r\n        return <Loader/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { !loading && link && <LinkCard link={link}/>}\r\n        </>\r\n    )\r\n}","import React, {useContext, useEffect, useState} from \"react\";\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {useMessage} from \"../hooks/message.hook\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\n\r\nexport const AuthPage = () => {\r\n    const auth = useContext(AuthContext);\r\n    const message = useMessage();\r\n    const {loading, request, error, clearError} = useHttp();\r\n    const [form, setForm] = useState({\r\n        email: '', password: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        message(error);\r\n        clearError();\r\n    }, [error, message, clearError]);\r\n\r\n    useEffect(() => {\r\n        window.M.updateTextFields();\r\n    }, [])\r\n\r\n\r\n    const changeHandler = (event) => {\r\n        setForm({...form, [event.target.name]: event.target.value});\r\n    }\r\n\r\n    const registerHandler = async () => {\r\n        try {\r\n            const data = await request('/api/auth/register', 'POST', {...form});\r\n            message(data.message);\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    const loginHandler = async () => {\r\n        try {\r\n            const data = await request('/api/auth/login', 'POST', {...form});\r\n            auth.login(data.token, data.userId);\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col s6 offset-s3\">\r\n                <h1>Сократи ссылку</h1>\r\n                <div className=\"card blue darken-1\">\r\n                    <div className=\"card-content white-text\">\r\n                        <span className=\"card-title\">Авторизация</span>\r\n                        <div>\r\n                            <div className=\"input-field\">\r\n                                <input\r\n                                    placeholder=\"Введите email\"\r\n                                    id=\"email\"\r\n                                    type=\"text\"\r\n                                    name=\"email\"\r\n                                    className=\"yellow-input\"\r\n                                    value={form.email}\r\n                                    onChange={changeHandler}\r\n                                />\r\n                                <label htmlFor=\"email\">Email</label>\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                                <input\r\n                                    placeholder=\"Введите пароль\"\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    className=\"yellow-input\"\r\n                                    value={form.password}\r\n                                    onChange={changeHandler}\r\n                                />\r\n                                <label htmlFor=\"password\">Пароль</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                        <button\r\n                            className=\"btn yellow darken-4\"\r\n                            style={{marginRight: 10}}\r\n                            disabled={loading}\r\n                            onClick={loginHandler}\r\n                        >Войти</button>\r\n                        <button\r\n                            className=\"btn gray lighten-1 black-text\"\r\n                            onClick={registerHandler}\r\n                            disabled={loading}\r\n                        >Регистрация</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {useCallback} from 'react';\r\n\r\nexport const useMessage = () => {\r\n    return useCallback((text) => {\r\n        if (window.M && text) {\r\n            window.M.toast({html: text});\r\n        }\r\n    }, []);\r\n}","import {useCallback, useState, useEffect} from \"react\";\r\n\r\nconst storageName = 'userData';\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(null);\r\n    const [ready, setReady] = useState(false);\r\n    const [userId, setUserId] = useState(null);\r\n\r\n    const login = useCallback((jwtToken, id) => {\r\n        setToken(jwtToken);\r\n        setUserId(id);\r\n\r\n        localStorage.setItem(storageName, JSON.stringify({\r\n            userId: id, token: jwtToken}));\r\n    }, []);\r\n\r\n    const logout = useCallback(() => {\r\n        setToken(null);\r\n        setUserId(null);\r\n        localStorage.removeItem(storageName);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const data = JSON.parse(localStorage.getItem(storageName));\r\n\r\n        if (data && data.token) {\r\n            login(data.token, data.userId)\r\n        }\r\n        setReady(true);\r\n    }, [login])\r\n\r\n    return {login, logout, token, userId, ready};\r\n}","import React, {useContext} from \"react\";\r\nimport {NavLink, useHistory} from 'react-router-dom';\r\nimport {AuthContext} from \"../context/AuthContext\";\r\n\r\nexport const Navbar = () => {\r\n    const history = useHistory();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const logoutHandler = (e) => {\r\n        e.preventDefault();\r\n        auth.logout();\r\n        history.push('/')\r\n    }\r\n\r\n    return(\r\n        <nav>\r\n            <div className=\"nav-wrapper blue darken-1\" style={{padding: '0 2rem'}}>\r\n                <span className=\"brand-logo\">Сокращение ссылок</span>\r\n                <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                    <li><NavLink to=\"/create\">Создать</NavLink></li>\r\n                    <li><NavLink to=\"/links\">Ссылки</NavLink></li>\r\n                    <li><a href=\"/\" onClick={logoutHandler}>Выйти</a></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from 'react';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport {useRoutes} from \"./routes\";\nimport {useAuth} from \"./hooks/auth.hook\";\nimport {AuthContext} from \"./context/AuthContext\";\nimport 'materialize-css';\nimport {Navbar} from \"./components/Navbar\";\nimport {Loader} from \"./components/Loader\";\n\n\nfunction App() {\n    const {token, login, logout, userId, ready} = useAuth();\n    const isAuthenticated = !!token;\n    const routes = useRoutes(isAuthenticated);\n\n    if (!ready) {\n        return <Loader/>\n    }\n\n    return (\n        <AuthContext.Provider value={{\n            token, login, logout, userId, isAuthenticated\n        }}>\n            <Router>\n                {isAuthenticated && <Navbar/>}\n                <div className=\"container\">\n                    {routes}\n                </div>\n            </Router>\n        </AuthContext.Provider>\n    );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport {Switch, Route, Redirect} from \"react-router-dom\";\r\nimport {LinksPage} from \"./pages/LinksPage\";\r\nimport {CreatePage} from \"./pages/CreatePage\";\r\nimport {DetailPage} from \"./pages/DetailPage\";\r\nimport {AuthPage} from \"./pages/AuthPage\";\r\n\r\nexport const useRoutes = (isAuthenticated) => {\r\n    if (isAuthenticated) {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/links\" exact>\r\n                    <LinksPage/>\r\n                </Route>\r\n                <Route path=\"/create\" exact>\r\n                    <CreatePage/>\r\n                </Route>\r\n                <Route path=\"/detail/:id\">\r\n                    <DetailPage/>\r\n                </Route>\r\n                <Redirect to=\"/create\"/>\r\n            </Switch>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact>\r\n                <AuthPage/>\r\n            </Route>\r\n            <Redirect to=\"/\"/>\r\n        </Switch>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}